{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_emotion__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","layouts__WEBPACK_IMPORTED_MODULE_4__","components__WEBPACK_IMPORTED_MODULE_5__","SuggestionBar","styled","target","props","theme","colors","white","light","shadow","suggestion","PostSuggestion","Post","_ref","data","pageContext","next","prev","post","markdownRemark","image","frontmatter","cover","childImageSharp","fluid","title","date","html","a","createElement","description","excerpt","pathname","path","article","input","list","tags","to","propTypes","PropTypes","shape","object","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,GAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAYMc,GAZNd,EAAA,KAYsBe,YAAH,OAAAC,OAAA,aAAGD,CAAH,0EAIH,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,OAJ/B,eAKH,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,YALzB,MAObC,EAAiBT,YAAH,OAAAC,OAAA,aAAGD,CAAH,4DAMdU,EAAO,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YACZC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACRC,EAAOJ,EAAKK,eACZC,EAAQF,EAAKG,YAAYC,MAAMC,gBAAgBC,MAC/CC,EAAQP,EAAKG,YAAYI,MACzBC,EAAOR,EAAKG,YAAYK,KACxBC,EAAOT,EAAKS,KAClB,OACElC,EAAAmC,EAAAC,cAAC9B,EAAA,EAAD,KACEN,EAAAmC,EAAAC,cAAC7B,EAAA,EAAD,CACEyB,MAAOA,EACPK,YAAaZ,EAAKG,YAAYS,aAAeZ,EAAKa,SAAW,IAC7DX,MAAOA,EACPY,SAAUd,EAAKG,YAAYY,KAC3BC,SAAO,IAETzC,EAAAmC,EAAAC,cAAC7B,EAAA,EAAD,CAAQyB,MAAOA,EAAOC,KAAMA,EAAMJ,MAAOF,IACzC3B,EAAAmC,EAAAC,cAAC9B,EAAA,EAAD,KACEN,EAAAmC,EAAAC,cAAC9B,EAAA,EAAD,CAASoC,MAAOR,IAChBlC,EAAAmC,EAAAC,cAAC7B,EAAA,EAAD,CAAWoC,KAAMlB,EAAKG,YAAYgB,MAAQ,MAE5C5C,EAAAmC,EAAAC,cAAC5B,EAAD,KACER,EAAAmC,EAAAC,cAAClB,EAAD,KACGM,GACCxB,EAAAmC,EAAAC,cAAClC,EAAA,KAAD,CAAM2C,GAAIrB,EAAKI,YAAYY,MAA3B,WAEExC,EAAAmC,EAAAC,cAAA,UAAKZ,EAAKI,YAAYI,SAI5BhC,EAAAmC,EAAAC,cAAClB,EAAD,KACGK,GACCvB,EAAAmC,EAAAC,cAAClC,EAAA,KAAD,CAAM2C,GAAItB,EAAKK,YAAYY,MAA3B,OAEExC,EAAAmC,EAAAC,cAAA,UAAKb,EAAKK,YAAYI,YASrBb,YAEfA,EAAK2B,UAAY,CACfxB,YAAayB,IAAUC,MAAM,CAC3BxB,KAAMuB,IAAUE,OAChB1B,KAAMwB,IAAUE,SACfC,WACH7B,KAAM0B,IAAUE,OAAOC,YAGlB,IAAMpD,EAAK","file":"component---src-templates-post-jsx-6e7e09a1031b5084fb84.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'react-emotion';\nimport PropTypes from 'prop-types';\nimport { Layout, Container, Content } from 'layouts';\nimport { TagsBlock, Header, SEO } from 'components';\n// import Header from '../components/Header';\n// import Container from '../layouts/Container';\n// import Content from '../layouts/Content';\n// import SEO from '../components/SEO';\nimport '../styles/prism';\n\nconst SuggestionBar = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background: ${props => props.theme.colors.white.light};\n  box-shadow: ${props => props.theme.shadow.suggestion};\n`;\nconst PostSuggestion = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 1rem 3rem 0 3rem;\n`;\n\nconst Post = ({ data, pageContext }) => {\n  const { next, prev } = pageContext;\n  const post = data.markdownRemark;\n  const image = post.frontmatter.cover.childImageSharp.fluid;\n  const title = post.frontmatter.title;\n  const date = post.frontmatter.date;\n  const html = post.html;\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description={post.frontmatter.description || post.excerpt || ' '}\n        image={image}\n        pathname={post.frontmatter.path}\n        article\n      />\n      <Header title={title} date={date} cover={image} />\n      <Container>\n        <Content input={html} />\n        <TagsBlock list={post.frontmatter.tags || []} />\n      </Container>\n      <SuggestionBar>\n        <PostSuggestion>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Previous\n              <h3>{prev.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n        <PostSuggestion>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next\n              <h3>{next.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n      </SuggestionBar>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    prev: PropTypes.object,\n    next: PropTypes.object,\n  }).isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        date\n        title\n        tags\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 1920\n              quality: 90\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}