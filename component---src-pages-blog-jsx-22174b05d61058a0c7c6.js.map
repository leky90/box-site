{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","components__WEBPACK_IMPORTED_MODULE_3__","layouts__WEBPACK_IMPORTED_MODULE_4__","Blog","_ref","edges","data","allMarkdownRemark","a","createElement","title","map","_ref2","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","tags","excerpt","propTypes","PropTypes","shape","arrayOf","string","object","isRequired","array"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,GAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAOMc,EAAO,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACSC,kBAAfF,MACR,OACEV,EAAAa,EAAAC,cAACP,EAAA,EAAD,KACEP,EAAAa,EAAAC,cAACX,EAAAU,EAAD,CAAQE,MAAO,cACff,EAAAa,EAAAC,cAACR,EAAA,EAAD,CAAQS,MAAM,aAAd,2BACCL,EAAMM,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTlB,EAAAa,EAAAC,cAACR,EAAA,EAAD,CACEa,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBV,MAAOG,EAAKI,YAAYP,MACxBW,KAAMR,EAAKI,YAAYI,KACvBC,KAAMT,EAAKI,YAAYK,KACvBC,QAASV,EAAKU,cAOTpB,YAEfA,EAAKqB,UAAY,CACflB,KAAMmB,IAAUC,MAAM,CACpBnB,kBAAmBkB,IAAUC,MAAM,CACjCrB,MAAOoB,IAAUE,QACfF,IAAUC,MAAM,CACdb,KAAMY,IAAUC,MAAM,CACpBH,QAASE,IAAUG,OACnBX,YAAaQ,IAAUC,MAAM,CAC3BV,MAAOS,IAAUI,OAAOC,WACxBV,KAAMK,IAAUG,OAAOE,WACvBpB,MAAOe,IAAUG,OAAOE,WACxBT,KAAMI,IAAUG,OAAOE,WACvBR,KAAMG,IAAUM,YAGnBD,iBAMJ,IAAMrC,EAAK","file":"component---src-pages-blog-jsx-22174b05d61058a0c7c6.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Header, BlogList } from 'components';\nimport { Layout } from 'layouts';\n\nconst Blog = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={'Blog Page'} />\n      <Header title=\"Blog Page\">Gatsby Tutorial Starter</Header>\n      {edges.map(({ node }) => (\n        <BlogList\n          key={node.id}\n          cover={node.frontmatter.cover.childImageSharp.fluid}\n          path={node.frontmatter.path}\n          title={node.frontmatter.title}\n          date={node.frontmatter.date}\n          tags={node.frontmatter.tags}\n          excerpt={node.excerpt}\n        />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          frontmatter {\n            title\n            path\n            tags\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}