{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","components__WEBPACK_IMPORTED_MODULE_4__","layouts__WEBPACK_IMPORTED_MODULE_5__","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","react_icons_io__WEBPACK_IMPORTED_MODULE_9__","Index","_ref","data","postList","edges","serviceList","console","log","a","createElement","title","className","sm","href","length","map","_ref2","node","key","id","cover","frontmatter","childImageSharp","fluid","path","excerpt","price","_ref3","date","propTypes","PropTypes","shape","allMarkdownRemark","arrayOf","string","object","isRequired","tags","array"],"mappings":"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","file":"component---src-pages-index-jsx-dcf6b7cb028a3c5d96d8.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Header, PostItem, ServiceItem } from 'components';\nimport { Layout } from 'layouts';\nimport { Grid, Row, Col, Button } from 'react-bootstrap';\nimport { IoIosLogIn, IoMdTime, IoIosHome } from 'react-icons/io';\n\nconst Index = ({ data }) => {\n  const postList = data.postList ? data.postList.edges : [];\n  const serviceList = data.serviceList ? data.serviceList.edges : [];\n  console.log(serviceList);\n  return (\n    <Layout>\n      <Helmet title={'Box Co-working Space'} />\n      <Header title=\"Box Co-working Space\">\n        Không gian làm việc chung - Nơi ươm mầm sáng tạo\n      </Header>\n      {/* <div className=\"section section--banner section--white\">\n        <Grid>\n          <Row>\n            <Col sm={6}>\n              <h2>Bạn đã tham gia làm thành viên của BOX chưa?</h2>\n            </Col>\n            <Col sm={6}>\n              <Button\n                bsStyle=\"success\"\n                bsSize=\"large\"\n                href=\"https://member.box-coworking.space/register\"\n              >\n                <IoIosLogIn /> Trở thành thành viên ngay hôm nay\n              </Button>\n              <br />\n              <br />\n              <Button\n                bsStyle=\"success\"\n                bsSize=\"large\"\n                href=\"https://member.box-coworking.space/login\"\n              >\n                <IoIosLogIn /> Đăng nhập tài khoản của bạn\n              </Button>\n            </Col>\n          </Row>\n        </Grid>\n      </div> */}\n      <div className=\"section section--info section--green\">\n        <Grid>\n          <Row className=\"text-center\">\n            <Col sm={6}>\n              <h3>\n                Box Co-working Space\n                <br /> <IoIosHome />{' '}\n                <a href=\"#\">08 Nguyễn Lương Bằng, Tp. Huế</a>\n              </h3>\n            </Col>\n            <Col sm={6}>\n              <h3>\n                Thời gian hoạt động:\n                <br /> <IoMdTime /> <a href=\"#\">Từ 7h00 - 23h00 mỗi ngày</a>\n              </h3>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n      <div className=\"section section--service section--white\">\n        <Grid>\n          <Row>\n            <Col sm={12}>\n              <h2>Dịch vụ của BOX</h2>\n            </Col>\n            {serviceList.length ? (\n              serviceList.map(({ node }) => (\n                <ServiceItem\n                  key={node.id}\n                  cover={\n                    node.frontmatter.cover\n                      ? node.frontmatter.cover.childImageSharp.fluid\n                      : {}\n                  }\n                  path={node.frontmatter.path}\n                  title={node.frontmatter.title}\n                  excerpt={node.excerpt}\n                  price={node.frontmatter.price}\n                />\n              ))\n            ) : (\n              <Col sm={12}>\n                <p className=\"text-center\">Đang xây dựng...</p>\n              </Col>\n            )}\n          </Row>\n        </Grid>\n      </div>\n      <div className=\"section section--cost section--green\" id=\"cost\">\n        <Grid>\n          <Row>\n            <Col sm={12}>\n              <h2>Bảng chi phí</h2>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={6}>\n              <div className=\"text-center\">\n                <h2>Hoạt động cá nhân linh hoạt</h2>\n                <p>\n                  <small>\n                    <em>Phù hợp với học sinh, sinh viên đến học tập, ôn luyện thi cử</em>\n                  </small>\n                </p>\n                <p className=\"price\">\n                  <strong>5,000₫ </strong>\n                  <small>/giờ</small>\n                </p>\n                <p className=\"price\">\n                  <strong>150,000₫ </strong>\n                  <small>/tuần</small>\n                </p>\n                <p className=\"price\">\n                  <strong>300,000₫ </strong>\n                  <small>/tháng</small>\n                </p>\n                <p><em>*Đặc biệt: giảm 20% cho học sinh, sinh viên.</em></p>\n              </div>\n              <h4>Bao gồm:</h4>\n              <ul>\n                <li>Chỗ ngồi còn trống</li>\n                <li>Điện, Wifi đầy đủ</li>\n                <li>Nước uống cơ bản (Nước lọc, trà)</li>\n                <li>Phòng làm việc chung</li>\n                <li>Phòng ăn uống</li>\n                <li>Phòng nghỉ ngơi</li>\n              </ul>\n            </Col>\n            <Col sm={6}>\n              <div className=\"text-center\">\n                <h2>Hoạt động cá nhân cố định</h2>\n                <p>\n                  <small>\n                    <em>Phù hợp với người làm nghề tự do muốn có một chỗ ngồi làm việc cố định</em>\n                  </small>\n                </p>\n                <p className=\"price\">\n                  <strong>300,000₫ </strong>\n                  <small>/tuần</small>\n                </p>\n                <p className=\"price\">\n                  <strong>800,000₫ </strong>\n                  <small>/tháng</small>\n                </p>\n                <p className=\"price\">\n                  <strong>2,000,000₫ </strong>\n                  <small>/3 tháng</small>\n                </p>\n                <p>&nbsp;</p>\n              </div>\n              <h4>Bao gồm:</h4>\n              <ul>\n                <li>Được dành chỗ ngồi cố định</li>\n                <li>Điện, Wifi đầy đủ</li>\n                <li>Nước uống cơ bản (Nước lọc, trà)</li>\n                <li>Phòng làm việc chung</li>\n                <li>Phòng ăn uống</li>\n                <li>Phòng nghỉ ngơi</li>                \n              </ul>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n      <div className=\"section section--blog section--white\">\n        <Grid>\n          <Row>\n            <Col sm={12}>\n              <h2>Bài viết mới nhất</h2>\n            </Col>\n            {postList.length ? (\n              postList.map(({ node }) => (\n                <PostItem\n                  key={node.id}\n                  cover={node.frontmatter.cover.childImageSharp.fluid}\n                  path={node.frontmatter.path}\n                  title={node.frontmatter.title}\n                  date={node.frontmatter.date}\n                  excerpt={node.excerpt}\n                />\n              ))\n            ) : (\n              <Col sm={12}>\n                <p className=\"text-center\">\n                  Hiện Box chưa có bài viết nào. Hãy đón chờ nhé :D\n                </p>\n              </Col>\n            )}\n          </Row>\n        </Grid>\n      </div>\n      <div className=\"section section--gallery section--green\">\n        <Grid>\n          <Row>\n            <Col sm={12}>\n              <h2>Sự kiến sắp diễn ra</h2>\n              <p className=\"text-center\">Đang xây dựng...</p>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n      <div className=\"section section--gallery section--white\">\n        <Grid>\n          <Row>\n            <Col sm={12}>\n              <h2>Thư viện hình ảnh</h2>\n              <p className=\"text-center\">Đang xây dựng...</p>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Index;\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    postList: allMarkdownRemark(\n      limit: 6\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        fileAbsolutePath: { regex: \"/content/posts/\" }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 75)\n          frontmatter {\n            title\n            path\n            tags\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    serviceList: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/content/services/\" }\n        frontmatter: { published: { eq: true } }\n      }\n      sort: { order: ASC, fields: [frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 75)\n          frontmatter {\n            title\n            path\n            price\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    fluidImages: file(name: { regex: \"/home-page-cover/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1000, quality: 90, traceSVG: { color: \"#2B2B2F\" }) {\n          base64\n          tracedSVG\n          aspectRatio\n          src\n          srcSet\n          srcWebp\n          srcSetWebp\n          sizes\n          originalImg\n          originalName\n          presentationWidth\n          presentationHeight\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}